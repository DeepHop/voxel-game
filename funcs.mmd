flowchart LR
  subgraph src::creatures::ai
    n17["fn is_walkable(mat: TerrainMaterial) -> bool"]
    n18["fn find_nearest_dig_target(&mut self, world: &World)"]
    n19["fn move_toward_target(&mut self, world: &World)"]
  end
  subgraph src::creatures::creature
    n21["fn new(x: f32, y: f32, size: f32, color: Color) -> Self"]
  end
  subgraph src::creatures::digging
    n20["fn dig_if_close(&mut self, world: &mut World, particles: &mut Vec<Particle>)"]
  end
  subgraph src::creatures::draw
    n16["fn draw(&self, camera_x: f32, camera_y: f32, zoom: f32)"]
  end
  subgraph src::game::game
    n22["fn new() -> Self"]
    n23["fn init(&mut self)"]
    n24["fn handle_input(&mut self)"]
    n25["fn update_creatures(&mut self)"]
    n26["fn draw_creatures(&self)"]
    n27["fn update(&mut self)"]
    n28["fn render(&mut self)"]
    n29["fn run(&mut self)"]
  end
  subgraph src::gui
    n40["fn new() -> Self"]
    n41["fn update(&mut self)"]
  end
  subgraph src::main
    n0["fn main()"]
  end
  subgraph src::player::actions
    n37["fn paint_dig_target(world: &mut World, x: i32, y: i32)"]
    n38["fn count_dig_jobs(world: &World) -> usize"]
    n39["fn paint_rock(world: &mut World, x: i32, y: i32)"]
  end
  subgraph src::renderer::renderer
    n1["fn default() -> Self"]
    n2["fn move_camera_delta(&mut self, dx: f32, dy: f32)"]
    n3["fn set_zoom(&mut self, zoom: f32)"]
    n4["fn get_zoom(&self) -> f32"]
    n5["fn delta_zoom(&mut self, zoom: f32)"]
    n6["fn get_camera_x(&self) -> f32"]
    n7["fn get_camera_y(&self) -> f32"]
    n8["fn draw(&self, state: &GameState)"]
  end
  subgraph src::world::chunk
    n10["fn new() -> Self"]
  end
  subgraph src::world::subpixel
    n15["fn default() -> Self"]
  end
  subgraph src::world::tile
    n9["fn default() -> Self"]
  end
  subgraph src::world::world
    n12["fn new() -> Self"]
    n13["fn get_material_at(&self, x: i32, y: i32) -> TerrainMaterial"]
    n14["fn set_material_at(&mut self, x: i32, y: i32, material: TerrainMaterial)"]
  end
  subgraph src::world::zlevel
    n11["fn new(z: i32) -> Self"]
  end
  subgraph src::worldgen::builder
    n30["fn new(seed: u32) -> Self"]
    n31["fn with_scale(mut self, scale: f64) -> Self"]
    n32["fn with_height_noise(self, _noise: OpenSimplex) -> Self"]
    n33["fn build(self) -> WorldGenerator"]
  end
  subgraph src::worldgen::generator
    n34["fn new(seed: u32) -> Self"]
    n35["fn generate_chunk(&self, chunk_x: i32, chunk_y: i32) -> Chunk"]
    n36["fn from_stages(stages: Vec<Box<dyn GenStage>>) -> Self"]
  end
  subgraph src::worldgen::stages::height
    n42["fn new(seed: u32, scale: f64) -> Self"]
    n43["fn execute(&self, ctx: &mut GenCtx)"]
  end
  n0 --> n10
  n0 --> n11
  n0 --> n12
  n0 --> n21
  n0 --> n22
  n0 --> n23
  n0 --> n29
  n0 --> n30
  n0 --> n34
  n0 --> n40
  n0 --> n42
  n10 --> n1
  n10 --> n15
  n10 --> n9
  n11 --> n10
  n11 --> n12
  n11 --> n21
  n11 --> n22
  n11 --> n30
  n11 --> n34
  n11 --> n40
  n11 --> n42
  n12 --> n10
  n12 --> n11
  n12 --> n21
  n12 --> n22
  n12 --> n30
  n12 --> n34
  n12 --> n40
  n12 --> n42
  n19 --> n13
  n19 --> n17
  n22 --> n1
  n22 --> n10
  n22 --> n11
  n22 --> n12
  n22 --> n15
  n22 --> n21
  n22 --> n30
  n22 --> n34
  n22 --> n40
  n22 --> n42
  n22 --> n9
  n23 --> n10
  n23 --> n11
  n23 --> n12
  n23 --> n21
  n23 --> n22
  n23 --> n30
  n23 --> n34
  n23 --> n40
  n23 --> n42
  n24 --> n2
  n24 --> n3
  n24 --> n37
  n24 --> n39
  n24 --> n4
  n24 --> n6
  n24 --> n7
  n25 --> n18
  n25 --> n19
  n25 --> n20
  n26 --> n16
  n26 --> n4
  n26 --> n6
  n26 --> n7
  n26 --> n8
  n27 --> n25
  n27 --> n38
  n27 --> n41
  n28 --> n16
  n28 --> n26
  n28 --> n4
  n28 --> n6
  n28 --> n7
  n28 --> n8
  n29 --> n24
  n29 --> n27
  n29 --> n28
  n29 --> n41
  n33 --> n10
  n33 --> n11
  n33 --> n12
  n33 --> n21
  n33 --> n22
  n33 --> n30
  n33 --> n34
  n33 --> n36
  n33 --> n40
  n33 --> n42
  n34 --> n10
  n34 --> n11
  n34 --> n12
  n34 --> n21
  n34 --> n22
  n34 --> n30
  n34 --> n40
  n34 --> n42
  n35 --> n10
  n35 --> n11
  n35 --> n12
  n35 --> n21
  n35 --> n22
  n35 --> n30
  n35 --> n34
  n35 --> n40
  n35 --> n42
  n35 --> n43
  n39 --> n14
  n42 --> n10
  n42 --> n11
  n42 --> n12
  n42 --> n21
  n42 --> n22
  n42 --> n30
  n42 --> n34
  n42 --> n40
  n8 --> n10
  n8 --> n11
  n8 --> n12
  n8 --> n21
  n8 --> n22
  n8 --> n30
  n8 --> n34
  n8 --> n40
  n8 --> n42
  n9 --> n1
  n9 --> n15
